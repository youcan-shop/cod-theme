{{ 'countdown.css' | asset_url | stylesheet_tag }}
{{ 'splide.min.css' | asset_url | stylesheet_tag }}
{{ 'splide.min.js' | asset_url | script_tag }}

{%- assign snippetId = 0 | rand %}
{% assign uniqID = 100 | rand: 2000 %}
{% assign section_settings = section.settings %}
{% assign images = product.images %}
{% assign product_name = product.name %}

{%- style -%}
{% for block in section.blocks %}
  {% if block.type == 'express_checkout' %}
    {% if block.settings.is_sticky %}
      .product-options, .product-quantity {
        display: none !important;
      }
      {% else %}
      .product-quantity .product-option-title {
        display: none;
      }
    {% endif %}
  {% endif %}

  {% if block.type == 'add_to_cart' %}
    {% if block.settings.is_sticky %}
      .product-quantity .product-option-title {
        display: block !important;
      }
    {% endif %}
  {% endif %}
{% endfor %}
{%- endstyle -%}

<div class='container'>
  {%- render 'breadcrumbs' product_name: product_name -%}
</div>
<div
  class='container yc-single-product'
  id='s-{{ snippetId }}'
>
  <input
  id='variantId'
  type='hidden'
  >
  <input
    type='file'
    id='yc-upload'
    accept='image/png, image/gif, image/jpeg'
    style='display:none'
  >
  <input
    type='text'
    id='yc-upload-link'
    style='display: none'
  >

  <!-- prettier-ignore -->
  {% render 'product-images-showcase', images: images, product_name: product_name, hidden: section_settings.hide_gallery, id: uniqID, banner_text: section_settings.banner_text, banner_text_background: section_settings.banner_text_background, banner_text_color: section_settings.banner_text_color, banner_price: section_settings.banner_price, banner_price_background: section_settings.banner_price_background, banner_price_color: section_settings.banner_price_color -%}

  <div class='product-details'>
    {%- for block in section.blocks -%}
      <div {{ block.youcan_attributes }}>
        {%- case block.type -%}
          {%- when 'product_title' -%}
            <h1 class='product-name top-spacing'>{{ product.name }}</h1>
          {%- when 'product_price' -%}
            <div class='product-price-container top-spacing'>
              <h2 class='product-price'>{{ product.price | money }}</h2>
              {% if section_settings.show_compare_at_price and product.compare_at_price != nil %}
                  <h3 class="compare-price">
                    <del>{{ product.compare_at_price | money }}</del>
                  </h3>
              {% endif %}
            </div>
          {%- when 'general_review' -%}
            <div class='top-spacing'>
              {%- render 'general-review' -%}
            </div>
          {%- when 'product_quantity' -%}
              <section class='group-blocks'>
                {%- render 'product-quantity-input' -%}
              </section>
          {%- when 'product_variants' -%}
            {% render 'product-variants', options: product.options %}
          {%- when 'product_description' -%}
            <section class='product-description top-spacing'>{{ product.description }}</section>
          {%- when 'countdown_timer' %}
            <div class='countdown-block top-spacing {% if block.settings.sticky_countdown %} is_sticky {% endif %}'>
              <span>{{ 'product_column.end' | t }} :</span>
              {%- render 'countdown', section_settings: block.settings -%}
            </div>
          {%- when 'stock' -%}
            <div class='top-spacing'>
              {% render 'stock', stock_items_left: block.settings.stock_items_left, total_stock_items: block.settings.total_stock_items %}
            </div>
          {%- when 'add_to_cart' -%}
            <div class='static-add-to-cart top-spacing' {{ block.youcan_attributes }}>
              {% render 'add-to-cart', text: block.settings.text_content, is_sticky: block.settings.is_sticky, background_color: block.settings.background_color, text_color: block.settings.text_color, snippetId: snippetId %}
            </div>
            {%- when 'accordion' -%}
              {%- render 'accordion', accordion_title: block.settings.accordion_title, accordion_title_icon: block.settings.accordion_title_icon.src, accordion_details: block.settings.accordion_details, background_color: block.settings.background_color, text_color: block.settings.text_color, margin_top: block.settings.margin_top -%}
          {%- when 'express_checkout' -%}
            <div class='express-checkout-container top-spacing'>
              {% render 'express-checkout', checkout: checkout, is_sticky: block.settings.is_sticky, settings: block.settings %}
            </div>
            {% if block.settings.is_sticky %}
            {% render 'sticky-checkout', settings: block.settings%}
            <button class="yc-btn is_sticky font-bold" onclick="triggerCheckout(`s-{{ snippetId }}`)">{{ block.settings.express_checkout_cta }}</button>
            {% endif %}
        {%- endcase -%}
      </div>
    {%- endfor -%}
  </div>

</div>

<script defer>
(function () {
const products = {{ product.images.size }};
const ycSlider = $('#yc_slider_{{ uniqID }}');

if (ycSlider) {
  const ycMobileSlider = new Splide(`#yc_slider_{{ uniqID }}`, {
    arrows: false,
    drag: true,
    flickMaxPages: 1,
    pagination: true,
    paginationType: 'bullets',
    gap:'4px',
    perPage: 1,
    rewind: true,
    fixedWidth: '90%',
    type: 'loop',
    rewind: true,
    rewindSpeed: 1000
  });

  ycMobileSlider.mount();
  let isSliderMounted = true;

  function checkMediaQuery(e) {
    if (e.matches && isSliderMounted === true) {
      ycMobileSlider.destroy();
      isSliderMounted = false;
    } else if(isSliderMounted === false) {
      ycMobileSlider.mount();
      isSliderMounted = true;
    }
  }

  const mediaQuery = window.matchMedia('(min-width: 768px)');
  mediaQuery.addEventListener('change', checkMediaQuery);
  checkMediaQuery(mediaQuery);
}
})();
</script>
